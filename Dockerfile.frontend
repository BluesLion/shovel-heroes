# Multi-stage Dockerfile for Shovel Heroes Frontend (React + Nginx)
# Uses distroless base image and runs as non-root user

# Stage 1: Build
FROM node:20-alpine AS builder

WORKDIR /app

# Copy package files for dependency installation
COPY package*.json ./

# Install dependencies for root workspace (frontend)
RUN npm ci

# Copy source code and configuration
COPY src ./src
COPY public ./public
COPY index.html ./
COPY vite.config.js ./
COPY jsconfig.json ./
COPY tailwind.config.js ./
COPY postcss.config.js ./
COPY eslint.config.js ./
COPY components.json ./

# Build the React application
RUN npm run build

# Stage 2: Production (Nginx + Non-root)
FROM nginx:1.27-alpine

# Copy custom nginx configuration
COPY nginx.conf /etc/nginx/conf.d/default.conf

# Copy built assets from builder stage
COPY --from=builder /app/dist /usr/share/nginx/html

# Use existing nginx user (UID/GID 82 in Alpine) and configure for non-root
RUN chown -R nginx:nginx /usr/share/nginx/html /var/cache/nginx /var/run && \
    chmod -R 755 /usr/share/nginx/html && \
    touch /var/run/nginx.pid && \
    chown nginx:nginx /var/run/nginx.pid && \
    # Update nginx.conf to run on port 8080 (non-privileged)
    sed -i 's/listen       80;/listen       8080;/g' /etc/nginx/conf.d/default.conf

# Expose non-privileged port
EXPOSE 8080

# Run as non-root nginx user (UID 82)
USER nginx

# Nginx runs in foreground by default
CMD ["nginx", "-g", "daemon off;"]
